pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                // Build the code using Maven
                sh 'mvn clean package'
            }
        }
        
        stage('Unit and Integration Tests') {
            steps {
                // Run unit tests using JUnit
                sh 'mvn test'
                
                // Run integration tests using a suitable framework
                // Modify the command as per your application's requirements
                sh 'mvn integration-test'
            }
        }
        
        stage('Code Analysis') {
            steps {
                // Run code analysis using SonarQube or Checkstyle
                // Modify the command as per your tool and configuration
                sh 'mvn sonar:sonar'
            }
        }
        
        stage('Security Scan') {
            steps {
                // Perform security scan using OWASP ZAP or SonarQube with security plugins
                // Modify the command as per your tool and configuration
                sh 'mvn owasp:dependency-check'
            }
        }
        
        stage('Deploy to Staging') {
            steps {
                // Deploy the application to a staging server using AWS CodeDeploy or other tool
                // Modify the command as per your deployment configuration
                sh 'aws deploy --application MyApp --deployment-group Staging --region us-west-2'
            }
        }
        
        stage('Integration Tests on Staging') {
            steps {
                // Run integration tests on the staging environment using a suitable framework
                // Modify the command as per your application's requirements
                sh 'mvn integration-test'
            }
        }
        
        stage('Deploy to Production') {
            steps {
                // Deploy the application to a production server using AWS CodeDeploy or other tool
                // Modify the command as per your deployment configuration
                sh 'aws deploy --application MyApp --deployment-group Production --region us-west-2'
            }
        }
    }
    
    post {
        always {
            // Send email notifications at the end of test and security scan stages
            emailext(
                subject: "Pipeline Status: ${currentBuild.result}",
                body: "Pipeline completed with status: ${currentBuild.result}",
                to: "cyriacjoseplackattu@gmail.com",
                attachmentsPattern: '**/*'
            )
        }
    }
}
